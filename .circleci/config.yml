version: 2
jobs:
  test:
    working_directory: ~/blog
    parallelism: 1
    shell: /bin/bash --login
    environment:
      TZ: /usr/share/zoneinfo/Asia/Tokyo
    docker:
      - image: circleci/ruby:2.6.5-node-browsers
        environment:
          RAILS_ENV: test
          POSTGRES_HOST: localhost
          POSTGRES_USERNAME: postgres
          POSTGRES_PASSWORD: ""
          REDIS_URL: redis://localhost:6379
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          YARN_CACHE_FOLDER: ~/.cache/yarn
          DISABLE_SPRING: true
          COVERAGE: true
      - image: circleci/postgres:11-alpine
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: blog_test
          POSTGRES_PASSWORD: ""
    steps:
      - checkout

      # Setup bundler
      - run:
          name: Configure Bundler
          command: |
            echo 'export BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ")' >> $BASH_ENV
            source $BASH_ENV
            gem install bundler
      - run:
          name: Which bundler?
          command: bundle -v
      - restore_cache:
          keys:
            - rails-bundle-{{ checksum "Gemfile.lock" }}
            - rails-bundle-
      - run:
          name: Bundle Install
          command: bundle check --path vendor/bundle || bundle install --deployment
      - save_cache:
          key: rails-bundle-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - run:
          name: Audit Bundler
          command: bundle exec bundle audit check --update

      # Setup yarn
      - restore_cache:
          keys:
            - rails-yarn-{{ checksum "yarn.lock" }}
            - rails-yarn-
      - run:
          name: Yarn Install
          command: yarn install --cache-folder ~/.cache/yarn
      - save_cache:
          key: rails-yarn-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - run:
          name: Audit Yarn
          command: yarn audit-ci -m

     # Setup DB
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Database setup
          command: bundle exec rails db:create db:schema:load --trace

      # Compiling Assets
      - restore_cache:
          keys:
            - asset-cache-{{ arch }}-{{ .Branch }}
            - asset-cache-
      - run:
          name: Compiling Assets
          command: bundle exec rails assets:precompile
      - save_cache:
          key: asset-cache-{{ arch }}-{{ .Branch }}-{{ epoch }}
          paths:
            - public/assets
            - public/packs
            - tmp/cache/assets/sprockets

      # Run Specs
      - run:
          name: Run Specs
          command: |
            echo "--format progress --format RspecJunitFormatter --out tmp/test-results/rspec/rspec.xml" > .rspec
            bundle exec rspec --format progress --format RspecJunitFormatter --out tmp/test-results/rspec/rspec.xml

      # Save test results
      - store_test_results:
          path: tmp/test-results

      # Save artifacts
      - store_artifacts:
          path: tmp/screenshots
          destination: screenshots
      - store_artifacts:
          path: coverage
          destination: coverage

workflows:
  version: 2
  test_workflow:
    jobs:
      - test
  daily_workflow:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - test
